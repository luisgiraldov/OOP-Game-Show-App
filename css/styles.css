/* Main styles */
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700&Roboto:300');

/* Variables */

:root {
  --backgorund: linear-gradient(
    rgba(0, 0, 0, 0.5),
    rgba(0, 0, 0, 0.5)
    ),
    url("../images/background/brick-brickwall.jpg") no-repeat center;
  --color-win: #78CF82;
  --color-lose: #D94545;
  --color-start: #5b85b7;
  --color-neutral: #445069;
  --color-neutral-light: #D2D2D2;
  --color-keys: #37474F;
  --color-keys-light: #E5E5E5;
  --font-size-large: 60px;
  --font-size-medium: 20px;
  --transition: all .2s ease-in-out;
}

/* main */

* {
  box-sizing: border-box;
  font-family: 'Montserrat', sans-serif;
}

body {
  justify-content: space-evenly;
  flex-direction: column;
  display: flex;
  height: 100vh;
}

li, ol, ul {
  padding: 0;
  display: inline-block;
}

h2 {
  margin: 0;
  text-transform: uppercase;
  font-size: var(--font-size-large);
  margin: 0;
}

h1 {
  font-size: 30px;
}

button {
  margin: 6px;
  border: 1px solid transparent;
  padding: .5rem 1rem;
  color: var(--color-keys);
  font-size: var(--font-size-medium);
  background-color: var(--color-keys-light);
  border-radius: 5px;
  -webkit-transition: var(--transition);
  -o-transition: var(--transition);
  transition: var(--transition);
  cursor: pointer;
}

#btn__reset {
	width: 400px;
  margin: 0 auto;
  border-radius: 8px;
}

.main-container {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  height: 100%;
  max-height: 900px;
  text-align: center;

  background: linear-gradient(
      rgba(0, 0, 0, 0.5),
      rgba(0, 0, 0, 0.5)
    ),
    url("../images/background/wooden-planks.jpg") no-repeat center;
  background-size: cover;
}

.section {
  width: 100%;
  padding: 10px;
}

#phrase ul li{
  margin-top: 15px;
}

/* Title */

.header {
  /* color: #3a3f58; */
  color: #5b85b7;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.85);
}


/* Phrase */

.letter {
  font-size: var(--font-size-medium);
  height: 65px;
  width: 65px;
  padding: 20px 1px 0 1px;
  margin-right: 2px;
  color: transparent;
  background: var(--color-neutral-light);
  border-radius: 5px;
}

.space {
  width: 15px;
}



.show {
  color: #fff;
  background-color: #4ac0d5;
  font-size: 20px;
  height: 65px;
  width: 65px;
  padding: 20px 1px 0 1px;
  margin-right: 2px;
  border-radius: 5px;
  -webkit-animation-duration: .5s;
  animation-duration: .5s;
}


/* Keyboard */

.keyrow {
  display: flex;
  justify-content: center;
}

.chosen {
  background: #3a3f58;
  border-radius: 5px;
  font-size: var(--font-size-medium);
  color: #FFFFFF;
}

.wrong {
  background: #f7a964;
  color: #FFFFFF;
}

.btn__reset {
  padding: 16px;
  margin: 50px auto;
  background: #f7a964;
  border-radius: 5px;
  font-size: 20px;
  cursor: pointer;
  border-bottom: solid 4px rgba(0, 0, 0, .3);
  border-right: solid 3px rgba(0, 0, 0, .3)
}

.btn__reset:active {
  padding: 14px 16px 16px 14px;
  border-bottom: solid 4px rgba(0, 0, 0, 0);
  border-right: solid 3px rgba(0, 0, 0, 0);
}


/* Overlay */

#overlay {
  display: flex;
  flex-direction: column;
  position: fixed;
  color: #FFFFFF;
  justify-content: center;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: 5px;
}

.title {
  color: #FFF;
}

.start {
  /* background-color: #3a3f58; */
  background: var(--backgorund);
  background-size: cover;
}

.start a {
  color: #fff;
}

/* Same code as lose, but it will stay like that until project is reviewed */
/* To avoid inconvenients because treehouse wants to see the win and lose classes added */
.win {
  /* background-color: var(--color-win); */
  background: var(--backgorund);
  background-size: cover;
}

/* Added this and loseColor class, because #overlay's color property has more specificity than win/lose class */
.winColor {
  color: var(--color-win);
}

.win a {
  color: var(--color-win);
}

.lose {
  /* background-color: #f5785f; */
  background: var(--backgorund);
  background-size: cover;
}

.loseColor {
  color: var(--color-lose);
}

.lose a {
  color: var(--color-lose);
}

/* Game over message */
.gameOverSize {
  width: 400px;
  margin: 10px auto;
}

/* ================================= 
  Button register style and effects
==================================== */
/* Code taken from: https://codepen.io/rafaaro/pen/oNvJQyb */

/* Common button styles */
.button {
	float: left;
	min-width: 150px;
	max-width: 250px;
	display: block;
	margin: 1em;
	padding: 1em 2em;
	border: none;
	background: none;
	color: inherit;
	vertical-align: middle;
	position: relative;
	z-index: 1;
	-webkit-backface-visibility: hidden;
	-moz-osx-font-smoothing: grayscale;
}
.button:focus {
	outline: none;
}
.button > span {
	vertical-align: middle;
}

/* Sizes */
.button--size-s {
	font-size: 14px;
}
.button--size-m {
	font-size: 16px;
}
.button--size-l {
	font-size: 18px;
}

/* Typography and Roundedness */
.button--text-upper {
	letter-spacing: 2px;
	text-transform: uppercase;
}
.button--text-thin {
	font-weight: 300;
}
.button--text-medium {
	font-weight: 500;
}
.button--text-thick {
	font-weight: 600;
}
.button--round-s {
	border-radius: 5px;
}
.button--round-m {
	border-radius: 15px;
}
.button--round-l {
	border-radius: 40px;
}

/* Borders */
.button--border-thin {
	border: 1px solid;
}
.button--border-medium {
	border: 2px solid;
}
.button--border-thick {
	border: 3px solid;
}

/* Nina */
.button--nina {
	padding: 0 2em;
	
	background: #fff;
	color: #083f57;
	overflow: hidden;
	-webkit-transition: background-color 0.3s;
	transition: background-color 0.3s;

	border: 2px solid black;
	border-radius: 4px;
}
.button--nina.button--inverted {
	background: #fff;
	/* color: #7986cb; */
	color: #3f51b5;
}
.button--nina > span {
	display: inline-block;
	padding: 1em 0;
	opacity: 0;
	color: #fff;
	-webkit-transform: translate3d(0, -10px, 0);
	transform: translate3d(0, -10px, 0);
	-webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
	transition: transform 0.3s, opacity 0.3s;
	-webkit-transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
	transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
}
.button--nina::before {
	content: attr(data-text);
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	padding: 1em 0;
	-webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
	transition: transform 0.3s, opacity 0.3s;
	-webkit-transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
	transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
}
.button--nina:hover {
	background-color: #3f51b5;
}
.button--nina:hover::before {
	opacity: 0;
	-webkit-transform: translate3d(0, 100%, 0);
	transform: translate3d(0, 100%, 0);
}
.button--nina:hover > span {
	opacity: 1;
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
}
.button--nina:hover > span:nth-child(1) {
	-webkit-transition-delay: 0.045s;
	transition-delay: 0.045s;
}
.button--nina:hover > span:nth-child(2) {
	-webkit-transition-delay: 0.09s;
	transition-delay: 0.09s;
}
.button--nina:hover > span:nth-child(3) {
	-webkit-transition-delay: 0.135s;
	transition-delay: 0.135s;
}
.button--nina:hover > span:nth-child(4) {
	-webkit-transition-delay: 0.18s;
	transition-delay: 0.18s;
}
.button--nina:hover > span:nth-child(5) {
	-webkit-transition-delay: 0.225s;
	transition-delay: 0.225s;
}
.button--nina:hover > span:nth-child(6) {
	-webkit-transition-delay: 0.27s;
	transition-delay: 0.27s;
}
.button--nina:hover > span:nth-child(7) {
	-webkit-transition-delay: 0.315s;
	transition-delay: 0.315s;
}
.button--nina:hover > span:nth-child(8) {
	-webkit-transition-delay: 0.36s;
	transition-delay: 0.36s;
}
.button--nina:hover > span:nth-child(9) {
	-webkit-transition-delay: 0.405s;
	transition-delay: 0.405s;
}
.button--nina:hover > span:nth-child(10) {
	-webkit-transition-delay: 0.45s;
	transition-delay: 0.45s;
}

/* ================================= 
  Javascript Classes
==================================== */
.js-hidden {
  display: none;
}


/* ================================= 
  Animation
==================================== */

/* ==================
  Blink-caret effect
===================== */

/* Code learned from: https://css-tricks.com/snippets/css/typewriter-effect/ */
.blink-caret-effect {
  margin: 0 auto;
  border-right: .15em solid orange; /* The typwriter cursor */
  letter-spacing: .15em; /* Adjust as needed */
  animation: 
    blink-caret .75s step-end infinite;
}

/* The typewriter cursor effect */
@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: orange; }
}
/* thicker cursor */
ul.blink-caret-effect {
  font-size: var(--font-size-large);
}

/* ==================
  Reveal block effect
===================== */
/* Code learned from: https://codepen.io/pierrinho/pen/RgpVga */

/* This class goes on the container element*/
.reveal-holder {
  position: relative;
  overflow: hidden;
}

.reveal-block {
  text-transform: uppercase;
  animation: fadeIn 0s 0.6s;
  animation-fill-mode: backwards;
}

.reveal-block::after {
  position: absolute;
  content: '';
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: #f0f2f6;
  transform: translateX(-100%);
  animation: secondaryImageOverlayIn 0.6s 0s, secondaryImageOverlayOut 0.6s 0.6s;
  animation-fill-mode: both;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes secondaryImageOverlayIn {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

@keyframes secondaryImageOverlayOut {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(100%);
  }
}
